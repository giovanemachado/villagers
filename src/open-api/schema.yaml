openapi: 3.0.0
paths:
  /games/match:
    post:
      operationId: createMatch
      parameters: []
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MatchData"
    get:
      operationId: getMatch
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
  /games/join-match/{code}:
    post:
      operationId: joinMatch
      parameters: []
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnterInMatchResponse"
  /games/initial-data:
    get:
      operationId: getMap
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMapResponse"
  /games/match-state/{code}:
    post:
      operationId: updateMatchState
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MatchStateUpdate"
      responses:
        "201":
          description: ""
  /games/finish-match/{code}:
    post:
      operationId: finishMatch
      parameters: []
      responses:
        "201":
          description: ""
info:
  title: Villagers
  description: Villagers is the backend for Castle Age.
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  schemas:
    MatchData:
      type: object
      properties:
        id:
          type: number
        code:
          type: string
        active:
          type: boolean
        players:
          type: array
          items:
            type: string
        numberOfPlayers:
          type: number
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
        - id
        - code
        - active
        - players
        - numberOfPlayers
        - createdAt
        - updatedAt
    MatchStatePlayerEndTurn:
      type: object
      properties:
        playerId:
          type: string
        endedTurn:
          type: boolean
      required:
        - playerId
        - endedTurn
    MoneyData:
      type: object
      properties:
        playerId:
          type: string
        value:
          type: number
      required:
        - playerId
        - value
    MatchStateUnitsMovement:
      type: object
      properties:
        id:
          type: string
        localization:
          type: string
        previousLocalization:
          type: string
        playerId:
          type: string
        movedInTurn:
          type: boolean
        reachableLocalizations:
          type: array
          items:
            type: string
      required:
        - id
        - localization
        - previousLocalization
        - playerId
        - movedInTurn
        - reachableLocalizations
    MatchState:
      type: object
      properties:
        playersEndTurn:
          type: array
          items:
            $ref: "#/components/schemas/MatchStatePlayerEndTurn"
        money:
          type: array
          items:
            $ref: "#/components/schemas/MoneyData"
        turns:
          type: number
        unitsMovement:
          type: array
          items:
            $ref: "#/components/schemas/MatchStateUnitsMovement"
        id:
          type: number
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        matchId:
          type: number
      required:
        - playersEndTurn
        - money
        - turns
        - unitsMovement
        - id
        - createdAt
        - updatedAt
        - matchId
    EnterInMatchResponse:
      type: object
      properties:
        match:
          $ref: "#/components/schemas/MatchData"
        matchState:
          $ref: "#/components/schemas/MatchState"
      required:
        - match
        - matchState
    SquareData:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
      required:
        - id
        - type
    UnitMovement:
      type: object
      properties:
        distance:
          type: number
        initialLocalization:
          type: string
        initialReachableLocalizations:
          type: array
          items:
            type: string
      required:
        - distance
        - initialLocalization
        - initialReachableLocalizations
    UnitData:
      type: object
      properties:
        id:
          type: string
        category:
          type: string
          enum:
            - military
            - structure
        playerId:
          type: string
        class:
          type: string
          enum:
            - castle
            - gate
            - archer
            - spearman
            - horseman
            - wall
        movement:
          $ref: "#/components/schemas/UnitMovement"
      required:
        - id
        - category
        - playerId
        - class
        - movement
    GetMapResponse:
      type: object
      properties:
        rows:
          type: array
          items:
            required: true
            type: array
            items:
              $ref: "#/components/schemas/SquareData"
        units:
          type: array
          items:
            $ref: "#/components/schemas/UnitData"
        matchState:
          $ref: "#/components/schemas/MatchState"
        matchData:
          $ref: "#/components/schemas/MatchData"
      required:
        - rows
        - units
        - matchState
        - matchData
    MatchStateUpdate:
      type: object
      properties: {}
