/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/games/map': {
    get: operations['getMap'];
  };
  '/games/turns': {
    get: operations['getTurn'];
    post: operations['updateTurn'];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    UnitMovement: {
      distance: number;
    };
    UnitData: {
      id: string;
      /** @enum {string} */
      category: 'military' | 'structure';
      /** @enum {string} */
      class: 'castle' | 'gate' | 'archer' | 'spearman' | 'horseman' | 'wall';
      movement?: components['schemas']['UnitMovement'];
    };
    SquareData: {
      id: string;
      type: string;
      unit?: components['schemas']['UnitData'];
    };
    MapData: {
      units: components['schemas']['UnitData'][];
      rows: components['schemas']['SquareData'][][];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  getMap: {
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['MapData'];
        };
      };
    };
  };
  getTurn: {
    responses: {
      200: {
        content: {
          'application/json': number;
        };
      };
    };
  };
  updateTurn: {
    responses: {
      201: {
        content: {
          'application/json': number;
        };
      };
    };
  };
}

/**
 * This is auto generated by the command g-enum, check ./package.json and ./src/add-enums-to-schema.ts
 * Do not make direct changes to this.
 */
export enum UNITDATA_CATEGORY {
  'MILITARY' = 'military',
  'STRUCTURE' = 'structure',
}

export enum UNITDATA_CLASS {
  'CASTLE' = 'castle',
  'GATE' = 'gate',
  'ARCHER' = 'archer',
  'SPEARMAN' = 'spearman',
  'HORSEMAN' = 'horseman',
  'WALL' = 'wall',
}
